script_name('E-SofT')
script_author('e2ernalybates')

require 'moonloader'
local imgui = require 'mimgui'
local ffi = require 'ffi'
sampev = require'samp.events'
vkeys = require'vkeys'
encoding = require("encoding"); encoding.default = 'CP1251'; u8 = encoding.UTF8  

local font = renderCreateFont("Arial", 10, 4)
local key = require 'vkeys'

local enter = false
local objects = nil

local LastActiveTime, LastActive = {}, {}

local style = 5

local renderWindow = imgui.new.bool(false)
local selectMenu, selectLovlya = imgui.new.int(1), imgui.new.int(1)

require "lib.moonloader"
local dlstatus = require('moonloader').download_status
local inicfg = require 'inicfg'
local keys = require "vkeys"

update_state = false

local script_vers = 2
local script_vers_text = "2.00"

local update_url = "https://raw.githubusercontent.com/e2ernalybates/updateSCRIPT/main/updateE-SofT.ini"
local update_path = getWorkingDirectory() .. "/update.ini"

local script_url = "https://github.com/e2ernalybates/updateSCRIPT/blob/main/E-SofT%20by%20e2e.luac?raw=true"
local script_path = thisScript().path

local requests = require('requests')
local activate = false


local ffi = require("ffi")
ffi.cdef[[
    int __stdcall GetVolumeInformationA(
    const char* lpRootPathName,
    char* lpVolumeNameBuffer,
    uint32_t nVolumeNameSize,
    uint32_t* lpVolumeSerialNumber,
    uint32_t* lpMaximumComponentLength,
    uint32_t* lpFileSystemFlags,
    char* lpFileSystemNameBuffer,
    uint32_t nFileSystemNameSize
    );
]]


local function getSerialNumber()
    local serial = ffi.new("unsigned long[1]", 0)
    ffi.C.GetVolumeInformationA(nil, nil, 0, serial, nil, nil, nil, 0)
    return serial[0]
end
-- == -- == --

local buttons = {
    'Lovlya',
    'Dop. Function',
    'Style Menu'
}

local buttonLovlya = {
    'DOMA',   
    'BIZU',   
    'OGOROD',   
    'GARAGE',   
    'KIOSKI'   
}

-- ОПЦИИ -- 
local textfloodbiz = '/buybiz'
floodahkbiz = imgui.new.bool(false)
kdfloodbiz = imgui.new.int(500)
delplayers = imgui.new.bool(false)
skiptablo = imgui.new.bool(false)
local PICKUP_MODEL = 1272
cmds = '/license_key'
state = false
-- ==-== --
houses = {
	wh = imgui.new.bool(false),
	buying = imgui.new.bool(false),
	msg = imgui.new.bool(false),
	flood = imgui.new.bool(false),
	distance = imgui.new.int(5),
	marker = {
		x=0,
		y=0,
		z=0,
	},

}

bizs = {
	wh = imgui.new.bool(false),
	buying = imgui.new.bool(false),
	buyingtablo = imgui.new.bool(false),
	msges = imgui.new.bool(false),
	enterflood = imgui.new.bool(false),
	cmd = os.clock(),
	distance = imgui.new.int(5),
}

gardens = {
	wh = imgui.new.bool(false),
	buying = imgui.new.bool(false),
	buyingtablo = imgui.new.bool(false),
	msges = imgui.new.bool(false),
	cmd = os.clock(),
	distance = imgui.new.int(5),
}

garages = {
	wh = imgui.new.bool(false),
	buying = imgui.new.bool(false),
	buyingtablo = imgui.new.bool(false),
	msges = imgui.new.bool(false),
	cmd = os.clock(),
	distance = imgui.new.int(5),
}

kioski = {
	wh = imgui.new.bool(false),
	buying = imgui.new.bool(false),
}

showObject = {
	false,
	0,0,0,
	0,
}

local npc, infnpc = {}, {}

function addMessage(msg)
    sampAddChatMessage(string.format('[E-SofT]: {FFFFFF}%s', msg), 0xFF6347)
end

function main()
	while not isSampAvailable() do wait(0) end
	while not sampIsLocalPlayerSpawned() do wait(0) end
	wait(1000)
	addMessage("I working AZIATKA EBANUYA", 0x00FA9A)
	addMessage("Open menu: {fffc4d}Shift + L {ffffff} or cmd {fffc4d}'/esoft'", 0x00FA9A)
	
	sampRegisterChatCommand('upd', cmd_update)
	sampRegisterChatCommand('esoft', cmd_activite)
	sampRegisterChatCommand('checkID', checkID)
	sampRegisterChatCommand("getpos", function()
        local x, y, z = getCharCoordinates(PLAYER_PED)
		addMessage("Your coordinates: {FFFFFF}| X: {fffc4d}" .. x .. "{FFFFFF} | Y:{fffc4d}" .. y .. "{FFFFFF} | Z:{fffc4d} " .. z, 0xFF0000)
        print("Your coordinates: X: " .. x .. " | Y:" .. y .. " | Z: " .. z)
    end)

	downloadUrlToFile(update_url, update_path, function(id, status)
        if status == dlstatus.STATUS_ENDDOWNLOADDATA then
            updateIni = inicfg.load(nil, update_path)
            if tonumber(updateIni.info.vers) > script_vers then
                addMessage("New update broy:{fffc4d} " .. updateIni.info.vers_text, 0x00FA9A)
                update_state = true
            end
            os.remove(update_path)
        end
    end)

    repeat wait(0) until isSampAvailable()
        sampRegisterChatCommand("license_key", function()
            local response = requests.get('https://github.com/e2ernalybates/license_key/blob/main/license_key-E-SofT.json')
            for k, v in pairs(response) do
                if k == 'text' then
                    for line in string.gmatch(v,"[^\n]+") do
                        --sampAddChatMessage(line, -1)
                        local hwid, date = line:match('serial = &quot;(.*)&quot;, date = &quot;(.*)&quot')
                        if hwid and date then
                            if tonumber (hwid) == (getSerialNumber()) then
                                local dayL, monthL, yearL = date:match('(%d+).(%d+).(%d+)')
                                diff = os.time{day=dayL, year=yearL, month=monthL}
                                local daysfrom = os.difftime(os.time(), diff) / (24 * 60 * 60)
                                local wholedays = math.ceil(daysfrom) * (-1)
                                if wholedays > 0 then
									addMessage('{32CD32}License activite! {FFFFFF}| - Your license will expire in '..wholedays..' days', 0x00FA9A)
                                    activate = true
                                else
                                    addMessage('Your license has expired: ' ..date, 0x00FA9A)
                                end
                            end
                        end
                    end
                    if not activate then
						addMessage('License is not activite', 0x00FA9A)
						addMessage('Activation key | -{32CD32} '..getSerialNumber(), 0x00FA9A)
						addMessage('Send the key to TG: {20B2AA}https://t.me/AntoninaStepanovna', 0x00FA9A)
					thisScript():unload()	
                    end
                end
            end
        end)
		
	
	while true do wait(0)
	if wasKeyPressed(key.VK_L) and isKeyJustPressed(key.VK_SHIFT) then
		renderWindow[0] = not renderWindow[0]
	end

		if update_state then
            downloadUrlToFile(script_url, script_path, function(id, status)
                if status == dlstatus.STATUS_ENDDOWNLOADDATA then
                    addMessage("Script successfully updated! | - View current update version {fffc4d}/upd", 0x00FA9A)
                    thisScript():reload()
                end
            end)
			break
        end

		for id = 0, 1500 do
            if sampIs3dTextDefined(id) then
                local text, color, posX, posY, posZ, distance, ignoreWalls, player, vehicle = sampGet3dTextInfoById(id)
				local dayn = 6

				if (bizs.buyingtablo[0]) then
               		if true then
						if text:find('/buybiz') and dist(posX, posY, posZ) < dayn then
							setVirtualKeyDown(VK_RETURN,true)
							wait(5)
							setVirtualKeyDown(VK_RETURN,false)
						end
					end	
				end

				if true then
					if text:find('/buybiz') then
						drawline(posX, posY, posZ,bizs,200,255,0,0)
						porno(posX, posY, posZ,'/buybiz',bizs)
					end
				end	

				if (garages.buyingtablo[0]) then
					if true then
						if text:find('/buygarage') and dist(posX, posY, posZ) < dayn then
							setVirtualKeyDown(VK_RETURN,true)
							wait(5)
							setVirtualKeyDown(VK_RETURN,false)
						end
					end
				end

				if true then
					if text:find('/buygarage') then
						drawline(posX, posY, posZ,garages,255,0,255,255)
						porno(posX, posY, posZ,'/buygarage',garages)
					end
				end

				if (gardens.buyingtablo[0]) then
					if true then
						if text:find('/buygarden') and dist(posX, posY, posZ) < dayn then
							setVirtualKeyDown(VK_RETURN,true)
							wait(5)
							setVirtualKeyDown(VK_RETURN,false)
						end
					end
				end

				if true then
                	if text:find('/buygarden') then
                		drawline(posX, posY, posZ, gardens,255,0,0,255)
                		porno(posX, posY, posZ,'/buygarden',gardens)
                	end
                end

				if true then
					if text:find('/buygarden') then
						if gardens.msges[0] then
							addMessage("Gdeto radom sletel 'Ogorod'", 0xFF0000)
							wait(3000)
						end
					end
				end
				if true then
					if text:find('/buygarage') then
						if garages.msges[0] then
							addMessage("Gdeto radom sletel 'Garage'", 0xFF0000)
							wait(3000)
						end
					end
				end
				if true then
					if text:find('/buybiz') then
						if bizs.msges[0] then
							addMessage("Gdeto radom sletel 'BIZ'", 0xFF0000)
							wait(3000)
						end
					end
				end
			end
		end			

		if delplayers[0] then
			for _, handle in ipairs(getAllChars()) do
				if doesCharExist(handle) then
				local _, id = sampGetPlayerIdByCharHandle(handle)
					if id ~= myid then
						emul_rpc('onPlayerStreamOut', { id })
						npc[#npc + 1] = id
					end
				end
			end
			if delplayers[0] == false then
				for i = 1, #npc do
					send_player_stream(npc[i], infnpc[npc[i]])
					npc[i] = nil
				end
			end
		end

		if floodahkbiz[0] then
			sampSendChat(textfloodbiz)
			wait(kdfloodbiz[0])
		end	
		
		MYPOS = {getCharCoordinates(PLAYER_PED)}

		for _, v in pairs(getAllObjects()) do
            if isObjectOnScreen(v) and (houses.wh[0] or houses.msg[0]) then
				local model = getObjectModel(v)
				local _, x, y, z = getObjectCoordinates(v)
                local x1, y1 = convert3DCoordsToScreen(x,y,z)
                local model = getObjectModel(v)
                local x10, y10 = convert3DCoordsToScreen(MYPOS[1],MYPOS[2],MYPOS[3])
				local distance = getDistanceBetweenCoords3d(x, y, z, MYPOS[1],MYPOS[2],MYPOS[3])
				if (model == 1273) then
					if (houses.msg[0]) then
						addMessage("Gdeto radom sletel 'DOM'", 0x00FA9A)
						wait(3000)
					end
				end
				if (model == 1273) then
					if (houses.wh[0]) then
						renderDrawPolygon(x1, y1,10,10,10,0,-1)
						renderDrawPolygon(x10, y10,10,10,10,0,-1)
						renderFontDrawText(font, string.format("DOM (%.1fm)", distance), x1, y1, -1)
						renderDrawLine(x10, y10, x1, y1, 1.0, -1)
					end
				end	
			end
		end

		if houses.buying[0] then
			for a,b in pairs(getAllObjects())do
			mypos = {getCharCoordinates(PLAYER_PED)}
			--if res then
				if not showObject[1] then
					res, showObject[2],showObject[3],showObject[4] = getObjectCoordinates(b)
					if getObjectModel(b) == PICKUP_MODEL and getDistanceBetweenCoords3d(showObject[2],showObject[3],showObject[4],mypos[1],mypos[2],mypos[3]) < 10 then			
						printString('add pickup', 1000)
						showObject[1] = true
						lua_thread.create(function()
							while showObject[1] do wait(0)
								mypos = {getCharCoordinates(PLAYER_PED)}
								if not doesObjectExist(b) then
									for i = 0,9 do
										setGameKeyState(21, 1)
										print('flood alt dom')
									end
									showObject = {
										false,
										0,0,0,
									}
								else
									if getDistanceBetweenCoords3d(showObject[2],showObject[3],showObject[4],mypos[1],mypos[2],mypos[3]) > 10 then
										showObject = {
											false,
											0,0,0,
										}
									end	
								end					
							end
						end)
					end	
				end
			end
		end

        if isKeyJustPressed(VK_RMENU) then 
        	houses.flood[0] = false
			floodahkbiz[0] = false
        end
	end
end

function sampev.onPlayerStreamIn(playerId, team, model, position, rotation, color, fightingStyle)
	infnpc[playerId] = { team, model, position, rotation, color, fightingStyle }
	if DEL_PLAYER then
		for _, handle in ipairs(getAllChars()) do
		  if doesCharExist(handle) then
			local _, id = sampGetPlayerIdByCharHandle(handle)
				if id ~= myid then
					emul_rpc('onPlayerStreamOut', { id })
				end
		  end
		end
		npc[#npc + 1] = playerId
	end
end

function checkID()
	for a,b in pairs(getAllObjects()) do
	  	if doesObjectExist(b) then
			local res, ox, oy, oz = getObjectCoordinates(b)
			local x,y,z = getCharCoordinates(PLAYER_PED)
			if res and getDistanceBetweenCoords3d(x, y, z, ox, oy, oz) < 3 then
			print(getObjectModel(b))
			end
		end
	end
end

function cmd_update(arg)
	sampShowDialog(1000, "Автообновление", "{FFFFFF}Текущая версия скрипта {FF0000}2.0 - пофикшены недоработки", "Закрыть", "", 0)
end

function cmd_activite()
	renderWindow[0] = not renderWindow[0]
end	

function emul_rpc(hook, parameters)
    local bs_io = require 'samp.events.bitstream_io'
    local handler = require 'samp.events.handlers'
    local extra_types = require 'samp.events.extra_types'
    local hooks = {

        --[[ Outgoing rpcs
        ['onSendEnterVehicle'] = { 'int16', 'bool8', 26 },
        ['onSendClickPlayer'] = { 'int16', 'int8', 23 },
        ['onSendClientJoin'] = { 'int32', 'int8', 'string8', 'int32', 'string8', 'string8', 'int32', 25 },
        ['onSendEnterEditObject'] = { 'int32', 'int16', 'int32', 'vector3d', 27 },
        ['onSendCommand'] = { 'string32', 50 },
        ['onSendSpawn'] = { 52 },
        ['onSendDeathNotification'] = { 'int8', 'int16', 53 },
        ['onSendDialogResponse'] = { 'int16', 'int8', 'int16', 'string8', 62 },
        ['onSendClickTextDraw'] = { 'int16', 83 },
        ['onSendVehicleTuningNotification'] = { 'int32', 'int32', 'int32', 'int32', 96 },
        ['onSendChat'] = { 'string8', 101 },
        ['onSendClientCheckResponse'] = { 'int8', 'int32', 'int8', 103 },
        ['onSendVehicleDamaged'] = { 'int16', 'int32', 'int32', 'int8', 'int8', 106 },
        ['onSendEditAttachedObject'] = { 'int32', 'int32', 'int32', 'int32', 'vector3d', 'vector3d', 'vector3d', 'int32', 'int32', 116 },
        ['onSendEditObject'] = { 'bool', 'int16', 'int32', 'vector3d', 'vector3d', 117 },
        ['onSendInteriorChangeNotification'] = { 'int8', 118 },
        ['onSendMapMarker'] = { 'vector3d', 119 },
        ['onSendRequestClass'] = { 'int32', 128 },
        ['onSendRequestSpawn'] = { 129 },
        ['onSendPickedUpPickup'] = { 'int32', 131 },
        ['onSendMenuSelect'] = { 'int8', 132 },
        ['onSendVehicleDestroyed'] = { 'int16', 136 },
        ['onSendQuitMenu'] = { 140 },
        ['onSendExitVehicle'] = { 'int16', 154 },
        ['onSendUpdateScoresAndPings'] = { 155 },
        ['onSendGiveDamage'] = { 'int16', 'float', 'int32', 'int32', 115 },
        ['onSendTakeDamage'] = { 'int16', 'float', 'int32', 'int32', 115 },]]

        -- Incoming rpcs
        ['onInitGame'] = { 139 },
        ['onPlayerJoin'] = { 'int16', 'int32', 'bool8', 'string8', 137 },
        ['onPlayerQuit'] = { 'int16', 'int8', 138 },
        ['onRequestClassResponse'] = { 'bool8', 'int8', 'int32', 'int8', 'vector3d', 'float', 'Int32Array3', 'Int32Array3', 128 },
        ['onRequestSpawnResponse'] = { 'bool8', 129 },
        ['onSetPlayerName'] = { 'int16', 'string8', 'bool8', 11 },
        ['onSetPlayerPos'] = { 'vector3d', 12 },
        ['onSetPlayerPosFindZ'] = { 'vector3d', 13 },
        ['onSetPlayerHealth'] = { 'float', 14 },
        ['onTogglePlayerControllable'] = { 'bool8', 15 },
        ['onPlaySound'] = { 'int32', 'vector3d', 16 },
        ['onSetWorldBounds'] = { 'float', 'float', 'float', 'float', 17 },
        ['onGivePlayerMoney'] = { 'int32', 18 },
        ['onSetPlayerFacingAngle'] = { 'float', 19 },
        --['onResetPlayerMoney'] = { 20 },
        --['onResetPlayerWeapons'] = { 21 },
        ['onGivePlayerWeapon'] = { 'int32', 'int32', 22 },
        --['onCancelEdit'] = { 28 },
        ['onSetPlayerTime'] = { 'int8', 'int8', 29 },
        ['onSetToggleClock'] = { 'bool8', 30 },
        ['onPlayerStreamIn'] = { 'int16', 'int8', 'int32', 'vector3d', 'float', 'int32', 'int8', 32 },
        ['onSetShopName'] = { 'string256', 33 },
        ['onSetPlayerSkillLevel'] = { 'int16', 'int32', 'int16', 34 },
        ['onSetPlayerDrunk'] = { 'int32', 35 },
        ['onCreate3DText'] = { 'int16', 'int32', 'vector3d', 'float', 'bool8', 'int16', 'int16', 'encodedString4096', 36 },
        --['onDisableCheckpoint'] = { 37 },
        ['onSetRaceCheckpoint'] = { 'int8', 'vector3d', 'vector3d', 'float', 38 },
        --['onDisableRaceCheckpoint'] = { 39 },
        --['onGamemodeRestart'] = { 40 },
        ['onPlayAudioStream'] = { 'string8', 'vector3d', 'float', 'bool8', 41 },
        --['onStopAudioStream'] = { 42 },
        ['onRemoveBuilding'] = { 'int32', 'vector3d', 'float', 43 },
        ['onCreateObject'] = { 44 },
        ['onSetObjectPosition'] = { 'int16', 'vector3d', 45 },
        ['onSetObjectRotation'] = { 'int16', 'vector3d', 46 },
        ['onDestroyObject'] = { 'int16', 47 },
        ['onPlayerDeathNotification'] = { 'int16', 'int16', 'int8', 55 },
        ['onSetMapIcon'] = { 'int8', 'vector3d', 'int8', 'int32', 'int8', 56 },
        ['onRemoveVehicleComponent'] = { 'int16', 'int16', 57 },
        ['onRemove3DTextLabel'] = { 'int16', 58 },
        ['onPlayerChatBubble'] = { 'int16', 'int32', 'float', 'int32', 'string8', 59 },
        ['onUpdateGlobalTimer'] = { 'int32', 60 },
        ['onShowDialog'] = { 'int16', 'int8', 'string8', 'string8', 'string8', 'encodedString4096', 61 },
        ['onDestroyPickup'] = { 'int32', 63 },
        ['onLinkVehicleToInterior'] = { 'int16', 'int8', 65 },
        ['onSetPlayerArmour'] = { 'float', 66 },
        ['onSetPlayerArmedWeapon'] = { 'int32', 67 },
        ['onSetSpawnInfo'] = { 'int8', 'int32', 'int8', 'vector3d', 'float', 'Int32Array3', 'Int32Array3', 68 },
        ['onSetPlayerTeam'] = { 'int16', 'int8', 69 },
        ['onPutPlayerInVehicle'] = { 'int16', 'int8', 70 },
        --['onRemovePlayerFromVehicle'] = { 71 },
        ['onSetPlayerColor'] = { 'int16', 'int32', 72 },
        ['onDisplayGameText'] = { 'int32', 'int32', 'string32', 73 },
        --['onForceClassSelection'] = { 74 },
        ['onAttachObjectToPlayer'] = { 'int16', 'int16', 'vector3d', 'vector3d', 75 },
        ['onInitMenu'] = { 76 },
        ['onShowMenu'] = { 'int8', 77 },
        ['onHideMenu'] = { 'int8', 78 },
        ['onCreateExplosion'] = { 'vector3d', 'int32', 'float', 79 },
        ['onShowPlayerNameTag'] = { 'int16', 'bool8', 80 },
        ['onAttachCameraToObject'] = { 'int16', 81 },
        ['onInterpolateCamera'] = { 'bool', 'vector3d', 'vector3d', 'int32', 'int8', 82 },
        ['onGangZoneStopFlash'] = { 'int16', 85 },
        ['onApplyPlayerAnimation'] = { 'int16', 'string8', 'string8', 'bool', 'bool', 'bool', 'bool', 'int32', 86 },
        ['onClearPlayerAnimation'] = { 'int16', 87 },
        ['onSetPlayerSpecialAction'] = { 'int8', 88 },
        ['onSetPlayerFightingStyle'] = { 'int16', 'int8', 89 },
        ['onSetPlayerVelocity'] = { 'vector3d', 90 },
        ['onSetVehicleVelocity'] = { 'bool8', 'vector3d', 91 },
        ['onServerMessage'] = { 'int32', 'string32', 93 },
        ['onSetWorldTime'] = { 'int8', 94 },
        ['onCreatePickup'] = { 'int32', 'int32', 'int32', 'vector3d', 95 },
        ['onMoveObject'] = { 'int16', 'vector3d', 'vector3d', 'float', 'vector3d', 99 },
        ['onEnableStuntBonus'] = { 'bool', 104 },
        ['onTextDrawSetString'] = { 'int16', 'string16', 105 },
        ['onSetCheckpoint'] = { 'vector3d', 'float', 107 },
        ['onCreateGangZone'] = { 'int16', 'vector2d', 'vector2d', 'int32', 108 },
        ['onPlayCrimeReport'] = { 'int16', 'int32', 'int32', 'int32', 'int32', 'vector3d', 112 },
        ['onGangZoneDestroy'] = { 'int16', 120 },
        ['onGangZoneFlash'] = { 'int16', 'int32', 121 },
        ['onStopObject'] = { 'int16', 122 },
        ['onSetVehicleNumberPlate'] = { 'int16', 'string8', 123 },
        ['onTogglePlayerSpectating'] = { 'bool32', 124 },
        ['onSpectatePlayer'] = { 'int16', 'int8', 126 },
        ['onSpectateVehicle'] = { 'int16', 'int8', 127 },
        ['onShowTextDraw'] = { 134 },
        ['onSetPlayerWantedLevel'] = { 'int8', 133 },
        ['onTextDrawHide'] = { 'int16', 135 },
        ['onRemoveMapIcon'] = { 'int8', 144 },
        ['onSetWeaponAmmo'] = { 'int8', 'int16', 145 },
        ['onSetGravity'] = { 'float', 146 },
        ['onSetVehicleHealth'] = { 'int16', 'float', 147 },
        ['onAttachTrailerToVehicle'] = { 'int16', 'int16', 148 },
        ['onDetachTrailerFromVehicle'] = { 'int16', 149 },
        ['onSetWeather'] = { 'int8', 152 },
        ['onSetPlayerSkin'] = { 'int32', 'int32', 153 },
        ['onSetInterior'] = { 'int8', 156 },
        ['onSetCameraPosition'] = { 'vector3d', 157 },
        ['onSetCameraLookAt'] = { 'vector3d', 'int8', 158 },
        ['onSetVehiclePosition'] = { 'int16', 'vector3d', 159 },
        ['onSetVehicleAngle'] = { 'int16', 'float', 160 },
        ['onSetVehicleParams'] = { 'int16', 'int16', 'bool8', 161 },
        --['onSetCameraBehind'] = { 162 },
        ['onChatMessage'] = { 'int16', 'string8', 101 },
        ['onConnectionRejected'] = { 'int8', 130 },
        ['onPlayerStreamOut'] = { 'int16', 163 },
        ['onVehicleStreamIn'] = { 164 },
        ['onVehicleStreamOut'] = { 'int16', 165 },
        ['onPlayerDeath'] = { 'int16', 166 },
        ['onPlayerEnterVehicle'] = { 'int16', 'int16', 'bool8', 26 },
        ['onUpdateScoresAndPings'] = { 'PlayerScorePingMap', 155 },
        ['onSetObjectMaterial'] = { 84 },
        ['onSetObjectMaterialText'] = { 84 },
        ['onSetVehicleParamsEx'] = { 'int16', 'int8', 'int8', 'int8', 'int8', 'int8', 'int8', 'int8', 'int8', 'int8', 'int8', 'int8', 'int8', 'int8', 'int8', 'int8', 'int8', 24 },
        ['onSetPlayerAttachedObject'] = { 'int16', 'int32', 'bool', 'int32', 'int32', 'vector3d', 'vector3d', 'vector3d', 'int32', 'int32', 113 }

    }
    local handler_hook = {
        ['onInitGame'] = true,
        ['onCreateObject'] = true,
        ['onInitMenu'] = true,
        ['onShowTextDraw'] = true,
        ['onVehicleStreamIn'] = true,
        ['onSetObjectMaterial'] = true,
        ['onSetObjectMaterialText'] = true
    }
    local extra = {
        ['PlayerScorePingMap'] = true,
        ['Int32Array3'] = true
    }
    local hook_table = hooks[hook]
    if hook_table then
        local bs = raknetNewBitStream()
        if not handler_hook[hook] then
            local max = #hook_table-1
            if max > 0 then
                for i = 1, max do
                    local p = hook_table[i]
                    if extra[p] then extra_types[p]['write'](bs, parameters[i])
                    else bs_io[p]['write'](bs, parameters[i]) end
                end
            end
        else
            if hook == 'onInitGame' then handler.on_init_game_writer(bs, parameters)
            elseif hook == 'onCreateObject' then handler.on_create_object_writer(bs, parameters)
            elseif hook == 'onInitMenu' then handler.on_init_menu_writer(bs, parameters)
            elseif hook == 'onShowTextDraw' then handler.on_show_textdraw_writer(bs, parameters)
            elseif hook == 'onVehicleStreamIn' then handler.on_vehicle_stream_in_writer(bs, parameters)
            elseif hook == 'onSetObjectMaterial' then handler.on_set_object_material_writer(bs, parameters, 1)
            elseif hook == 'onSetObjectMaterialText' then handler.on_set_object_material_writer(bs, parameters, 2) end
        end
        raknetEmulRpcReceiveBitStream(hook_table[#hook_table], bs)
        raknetDeleteBitStream(bs)
    end
end


local bytes = { 2, 0, 0, 0, 0, 0, 16, 0, 0, 0, 79, 110, 68, 105, 97, 108, 111, 103, 82, 101, 115, 112, 111, 110, 115, 101, 8, 0, 0, 0, 100, 0, 0, 0, 0, 100 }
function onReceivePacket(id, bs)
	if id == 215 and skiptablo[0] then
        raknetBitStreamIgnoreBits(bs, 8)
        if raknetBitStreamReadInt16(bs) == 2 then
            raknetBitStreamReadInt32(bs)
            local e = {}
            for i = 1, raknetBitStreamReadInt8(bs) do
                local l = raknetBitStreamReadInt32(bs)
                table.insert(e, raknetBitStreamReadString(bs, l))
            end
            if table.getn(e) > 0 then
                local text = e[1]
                if text:find("Дом свободен") or text:find("Покупка нового бизнеса") or text:find("Покупка гаража") or text:find("Покупка огорода") then
                    sendDialogResponse(1,0,'by e2e')
                    return false
                end
            end    
		end
	end
	if id == 215 and houses.buying[0] or bizs.buying[0] or garages.buying[0] or gardens.buying[0] then
		raknetBitStreamIgnoreBits(bs, 8)
		if raknetBitStreamReadInt16(bs) == 2 then
			raknetBitStreamReadInt32(bs)
			for i = 1, raknetBitStreamReadInt8(bs) do
				local l = raknetBitStreamReadInt32(bs)
                local text = raknetBitStreamReadString(bs, l)
				if text:find("Дом свободен") or text:find("Покупка нового бизнеса") or text:find("Покупка гаража") or text:find("Покупка огорода") then
					local bs = raknetNewBitStream()
                    local bytes = { 2, 0, 0, 0, 0, 0, 16, 0, 0, 0, 79, 110, 68, 105, 97, 108, 111, 103, 82, 101, 115, 112, 111, 110, 115, 101, 8, 0, 0, 0, 100, 0, 0, 0, 0, 100 }
                    raknetBitStreamWriteInt8(bs, 215)
                    for i = 1, #bytes do
                        raknetBitStreamWriteInt8(bs, bytes[i])
                    end
                    raknetBitStreamWriteInt32(bs, 1)
                    raknetBitStreamWriteInt8(bs, 100)
                    raknetBitStreamWriteInt32(bs, 0)
                    raknetBitStreamWriteInt8(bs, 115)
                    raknetBitStreamWriteInt32(bs, 8)
                    raknetBitStreamWriteString(bs, "by e2ernalybates")
                    raknetSendBitStreamEx(bs, 1, 7, 1)
                    raknetDeleteBitStream(bs)
                end
			end
		end
	end
end

function sendDialogResponse(button, list, text)
    local bs = raknetNewBitStream()
    raknetBitStreamWriteInt8(bs, 215)
    for i = 1, #bytes do
        raknetBitStreamWriteInt8(bs, bytes[i])
    end
    raknetBitStreamWriteInt32(bs, button)
    raknetBitStreamWriteInt8(bs, 100)
    raknetBitStreamWriteInt32(bs, list)
    raknetBitStreamWriteInt8(bs, 115)
    raknetBitStreamWriteInt32(bs, #text)
    raknetBitStreamWriteString(bs, text)
    raknetSendBitStreamEx(bs, 1, 7, 1)
    raknetDeleteBitStream(bs)
end


function drawline(x,y,z,TABLE,a,r,g,b)
	if TABLE['wh'][0] and dist(x, y, z) < TABLE['distance'][0] then
		local xx,yy = convert3DCoordsToScreen(x,y,z)
		local xxx,yyy = convert3DCoordsToScreen(MYPOS[1],MYPOS[2],MYPOS[3])
		renderDrawLine(xxx,yyy,xx,yy,2,join_argb(a,r,g,b))
		renderDrawPolygon(xxx,yyy,10,10,10,0,join_argb(a,r,g,b))
		renderDrawPolygon(xx,yy,10,10,10,0,join_argb(a,r,g,b))
	end
end

function sampev.onServerMessage(color, text)
	if kioski.buying[0] then
		if text:find("^Текущее время:") then
			for i = 0,9 do
			setGameKeyState(21, 1)
			print('alt kiosk') -- флуд
			end
		elseif text:find("^Для получения") then
			for i = 0,9 do
			setGameKeyState(21, 1)
			print('alt kiosk') -- флуд
			end
		end	
	end	
end

local font = {}
imgui.OnInitialize(function()
    imgui.GetIO().IniFilename = nil
	local glyph_ranges = imgui.GetIO().Fonts:GetGlyphRangesCyrillic()
	local font_path = getFolderPath(0x14) .. '\\trebucbd.ttf'
	imgui.GetIO().Fonts:Clear()
	imgui.GetIO().Fonts:AddFontFromFileTTF(font_path, 14.0, nil, glyph_ranges)
	for k,v in pairs({8, 11, 15, 16, 20, 25}) do
		font[v] = imgui.GetIO().Fonts:AddFontFromFileTTF(font_path, v, nil, glyph_ranges)
	end
    checkstyle()
end)


local newFrame = imgui.OnFrame(
    function() return renderWindow[0] end,
    function(player)
		if activate then
        local resX, resY = getScreenResolution()
        imgui.SetNextWindowPos(imgui.ImVec2(resX / 1.5, resY / 1.8), imgui.Cond.FirstUseEver, imgui.ImVec2(0.5, 0.5))
        imgui.SetNextWindowSize(imgui.ImVec2(-1, -1), imgui.Cond.FirstUseEver)
        imgui.Begin('[RADMIR-RP] E-SofT |- #e2e',renderWindow,32+64)
        imgui.BeginGroup()
		imgui.PushStyleVarVec2(imgui.StyleVar.ButtonTextAlign, imgui.ImVec2(0.05,0.5))
        imgui.PushFont(font[16])
		for k, i in pairs(buttons) do
			local clr = imgui.GetStyle().Colors[imgui.Col.Text].x
			if selectMenu[0] == k then
				local p = imgui.GetCursorScreenPos()
				imgui.GetWindowDrawList():AddRectFilled(imgui.ImVec2(p.x, p.y + 10),imgui.ImVec2(p.x + 3, p.y + 25), imgui.ColorConvertFloat4ToU32(imgui.GetStyle().Colors[imgui.Col.Border]), 5, imgui.DrawCornerFlags.Right)
			end
			imgui.PushStyleColor(imgui.Col.Button, imgui.ImVec4(clr,clr,clr,selectMenu[0] == k and 0.1 or 0))
			imgui.PushStyleColor(imgui.Col.ButtonActive, imgui.ImVec4(clr,clr,clr,0.15))
			imgui.PushStyleColor(imgui.Col.ButtonHovered, imgui.ImVec4(clr,clr,clr,0.1))
			if imgui.Button(u8(i), imgui.ImVec2(162,35)) then
				if selectMenu[0] ~= k then
					selectMenu[0] = k
				end
			end
			imgui.PopStyleColor(3)
		end
        imgui.PopFont()
		imgui.PopStyleVar()
		imgui.EndGroup()
		imgui.SetCursorPos(imgui.ImVec2(175, 30))
        imgui.BeginChild('##menulist', imgui.ImVec2(315, 175), false, imgui.WindowFlags.NoScrollbar)
        if selectMenu[0] == 1 then
            imgui.SetCursorPos(imgui.ImVec2(5, 5))
            imgui.BeginGroup()
            imgui.PushFont(font[15])
            for k, i in pairs(buttonLovlya) do
                local clr = imgui.GetStyle().Colors[imgui.Col.Text].x
                if selectLovlya[0] == k then
                    local p = imgui.GetCursorScreenPos()
                    imgui.GetWindowDrawList():AddRectFilled(imgui.ImVec2(p.x + 20, p.y),imgui.ImVec2(p.x + 40, p.y + 5), imgui.ColorConvertFloat4ToU32(imgui.GetStyle().Colors[imgui.Col.Border]), 5, imgui.DrawCornerFlags.Bot)
                end
                imgui.PushStyleColor(imgui.Col.Button, imgui.ImVec4(clr,clr,clr,selectLovlya[0] == k and 0.1 or 0))
                imgui.PushStyleColor(imgui.Col.ButtonActive, imgui.ImVec4(clr,clr,clr,0.15))
                imgui.PushStyleColor(imgui.Col.ButtonHovered, imgui.ImVec4(clr,clr,clr,0.1))
                if imgui.Button(u8(i), imgui.ImVec2(60,35)) then
                    if selectLovlya[0] ~= k then
                        selectLovlya[0] = k
                    end
                end
                imgui.SameLine(0,1)
                imgui.PopStyleColor(3)
            end
            imgui.PopFont()
            imgui.EndGroup()
            imgui.Separator()
            imgui.NewLine()
            imgui.SetCursorPos(imgui.ImVec2(5, 55))
            imgui.BeginGroup()
            if selectLovlya[0] == 1 then
                if imgui.ToggleButton('WH', houses.wh) then
                end
                imgui.SetCursorPosY(imgui.GetCursorPosY()-3)
                if imgui.ToggleButton(u8'Lovlya open HOME', houses.buying) then
                end
				imgui.SameLine(1, 150)
                imgui.SetCursorPosY(imgui.GetCursorPosY()-3)
                if imgui.ToggleButton(u8'Lovlya close HOME', houses.flood) then lua_thread.create(flood)
                end
				imgui.SetCursorPosY(imgui.GetCursorPosY()-3)
				if imgui.ToggleButton(u8'Yvidomlenia', houses.msg) then
                end
            elseif selectLovlya[0] == 2 then
                if imgui.ToggleButton(u8'WH', bizs.wh) then
                end
				imgui.SameLine(1, 75)
				imgui.SetCursorPosY(imgui.GetCursorPosY()-2)
				if imgui.SliderInt('##distance', bizs.distance, 0, 285) then end
                imgui.SetCursorPosY(imgui.GetCursorPosY()-3)
                if imgui.ToggleButton(u8'Lovlya', bizs.buying) then
                end
				imgui.SetCursorPosY(imgui.GetCursorPosY()-3)
				if imgui.ToggleButton(u8'Lovlya s TABLOM', bizs.buyingtablo) then
                end
				imgui.SetCursorPosY(imgui.GetCursorPosY()-3)
				if imgui.ToggleButton(u8'Yvidomlenia', bizs.msges) then
                end
            elseif selectLovlya[0] == 3 then
                if imgui.ToggleButton('WH', gardens.wh) then
                end
				imgui.SameLine(1, 75)
				imgui.SetCursorPosY(imgui.GetCursorPosY()-2)
				if imgui.SliderInt('##distance', gardens.distance, 0, 285) then end
				imgui.SetCursorPosY(imgui.GetCursorPosY()-3)
                if imgui.ToggleButton(u8'Lovlya', gardens.buying) then
                end
				imgui.SetCursorPosY(imgui.GetCursorPosY()-3)
				if imgui.ToggleButton(u8'Lovlya s TABLOM', gardens.buyingtablo) then
                end
				imgui.SetCursorPosY(imgui.GetCursorPosY()-3)
                if imgui.ToggleButton(u8'Yvidomlenia', gardens.msges) then
                end
            elseif selectLovlya[0] == 4 then
                if imgui.ToggleButton('WH', garages.wh) then
                end
				imgui.SameLine(1, 75)
				imgui.SetCursorPosY(imgui.GetCursorPosY()-2)
				if imgui.SliderInt('##distance', garages.distance, 0, 285) then end
				imgui.SetCursorPosY(imgui.GetCursorPosY()-3)
                if imgui.ToggleButton(u8'Lovlya', garages.buying) then
                end
				imgui.SetCursorPosY(imgui.GetCursorPosY()-3)
				if imgui.ToggleButton(u8'Lovlya s TABLOM', garages.buyingtablo) then
                end
				imgui.SetCursorPosY(imgui.GetCursorPosY()-3)
                if imgui.ToggleButton(u8'Yvidomlenia', garages.msges) then
                end
            elseif selectLovlya[0] == 5 then
                if imgui.ToggleButton(u8'Lovlya', kioski.buying) then
                end
            end
            imgui.EndGroup()
        elseif selectMenu[0] == 2 then
            imgui.SetCursorPos(imgui.ImVec2(5, 15))
            imgui.BeginGroup()
            imgui.PushFont(font[15])
            if imgui.ToggleButton(u8'FLOOD Enter', bizs.enterflood) then lua_thread.create(enterflood)
            end
			imgui.SameLine(150)
			imgui.SetCursorPosY(imgui.GetCursorPosY() - 2)
			if imgui.ToggleButton(u8'SkipMenuBuy', skiptablo) then end
			imgui.SetCursorPosY(imgui.GetCursorPosY() - 2)
			if imgui.ToggleButton(u8'DELETE players', delplayers) then end
            if imgui.ToggleButton(u8'AHK flood - /buybiz', floodahkbiz) then
            end
            imgui.Text(u8'Zaderjka v (mls):')
            imgui.SetCursorPosY(imgui.GetCursorPosY() - 2)
            imgui.PushItemWidth(230)
            if imgui.SliderInt('##delayflood', kdfloodbiz, 300, 5000) then
                
            end
            imgui.PopItemWidth()
            imgui.PopFont()
            imgui.EndGroup()
        elseif selectMenu[0] == 3 then
            imgui.SetCursorPos(imgui.ImVec2(100, 20))
			imgui.BeginGroup()
			imgui.PushFont(font[20])
			imgui.SameLine(35)
			imgui.SetCursorPosY(35)
			imgui.Text(u8'STYLE:')
			imgui.PopFont()
			imgui.SetCursorPosX(40)
				if imgui.CircleButton('##choosestyle0', style == 0, imgui.ImVec4(0.91, 0.64, 0.13, 1.00), 20) then
					style = 0
					checkstyle()
				end
				imgui.SameLine(0, 15)
				if imgui.CircleButton('##choosestyle1', style == 1, imgui.ImVec4(1.00, 0.28, 0.28, 0.90), 20) then
					style = 1
					checkstyle()
				end
				imgui.SameLine(0, 15)
				if imgui.CircleButton('##choosestyle2', style == 2, imgui.ImVec4(0.00, 0.35, 1.00, 0.90), 20) then
					style = 2
					checkstyle()
				end
				imgui.SameLine(0, 15)
				if imgui.CircleButton('##choosestyle3',style == 3, imgui.ImVec4(0.41, 0.19, 0.63, 0.90), 20) then
					style = 3
					checkstyle()
				end
				imgui.SameLine(0, 15)
				if imgui.CircleButton('##choosestyle4', style == 4, imgui.ImVec4(0.00, 0.69, 0.33, 0.90), 20) then
					style = 4
					checkstyle()
				end
				imgui.SameLine(0, 15)
				if imgui.CircleButton('##choosestyle5', style == 5, imgui.ImVec4(0.51, 0.51, 0.51, 0.90), 20) then
					style = 5
					checkstyle()
				end
				imgui.Text(u8'vk.com/modslatterday')
			imgui.EndGroup()
        end
        imgui.EndChild()
        imgui.End()
		else
		sampProcessChatInput('/license_key')
		end	
    end
)

function flood()
	while (houses.flood[0]) do wait(0)
		setVirtualKeyDown(VK_LMENU,true)
		setVirtualKeyDown(VK_RETURN,true)
		wait(5)
		setVirtualKeyDown(VK_LMENU,false)
		setVirtualKeyDown(VK_RETURN,false)
		wait(5)
	end
end

function enterflood()
	while (bizs.enterflood[0]) do wait(0)
		setVirtualKeyDown(VK_RETURN,true)
	end	
end

function porno(posX, posY, posZ,cmd,TABLE)
	local JOSKI_SEX = 6
	if TABLE['buying'][0] then 
		if dist(posX, posY, posZ) < JOSKI_SEX and os.clock()-TABLE['cmd'] > 0.3  then
			TABLE['cmd'] = os.clock()
			sampSendChat(cmd)
		end
	end
end

function join_argb(a, r, g, b) local argb = b argb = bit.bor(argb, bit.lshift(g, 8)) argb = bit.bor(argb, bit.lshift(r, 16)) argb = bit.bor(argb, bit.lshift(a, 24)) return argb end

function dist(x,y,z)
	return getDistanceBetweenCoords3d(MYPOS[1],MYPOS[2],MYPOS[3],x,y,z)
end

function checkstyle()
    imgui.SwitchContext()
    local colors = imgui.GetStyle().Colors
    local ImVec4 = imgui.ImVec4
	local ImVec2 = imgui.ImVec2
    --==[ STYLE ]==--
    imgui.GetStyle().WindowPadding = imgui.ImVec2(5, 5)
    imgui.GetStyle().FramePadding = imgui.ImVec2(5, 5)
    imgui.GetStyle().ItemSpacing = imgui.ImVec2(5, 5)
    imgui.GetStyle().ItemInnerSpacing = imgui.ImVec2(2, 2)
    imgui.GetStyle().TouchExtraPadding = imgui.ImVec2(0, 0)
    imgui.GetStyle().IndentSpacing = 0
    imgui.GetStyle().ScrollbarSize = 10
    imgui.GetStyle().GrabMinSize = 10

    --==[ BORDER ]==--
    imgui.GetStyle().WindowBorderSize = 0
    imgui.GetStyle().ChildBorderSize = 0
    imgui.GetStyle().PopupBorderSize = 0
    imgui.GetStyle().FrameBorderSize = 0
    imgui.GetStyle().TabBorderSize = 0

    --==[ ROUNDING ]==--
    imgui.GetStyle().WindowRounding = 5
    imgui.GetStyle().ChildRounding = 5
    imgui.GetStyle().FrameRounding = 5
    imgui.GetStyle().PopupRounding = 5
    imgui.GetStyle().ScrollbarRounding = 5
    imgui.GetStyle().GrabRounding = 5
    imgui.GetStyle().TabRounding = 5

    --==[ ALIGN ]==--
    imgui.GetStyle().WindowTitleAlign = imgui.ImVec2(0.5, 0.5)
    imgui.GetStyle().ButtonTextAlign = imgui.ImVec2(0.5, 0.5)
    imgui.GetStyle().SelectableTextAlign = imgui.ImVec2(0.5, 0.5)
    
    --==[ COLORS ]==--
    if style == 0 then
        colors[imgui.Col.Text] 					= ImVec4(0.92, 0.92, 0.92, 1.00)
		colors[imgui.Col.TextDisabled] 			= ImVec4(0.44, 0.44, 0.44, 1.00)
		colors[imgui.Col.WindowBg] 				= ImVec4(0.06, 0.06, 0.06, 1.00)
		colors[imgui.Col.ChildBg] 				= ImVec4(0.00, 0.00, 0.00, 0.00)
		colors[imgui.Col.PopupBg] 				= ImVec4(0.08, 0.08, 0.08, 0.94)
		colors[imgui.Col.Border] 					= ImVec4(0.51, 0.36, 0.15, 1.00)
		colors[imgui.Col.Separator]				= ImVec4(0.21, 0.21, 0.21, 1.00)
		colors[imgui.Col.BorderShadow] 			= ImVec4(0.00, 0.00, 0.00, 0.00)
		colors[imgui.Col.FrameBg] 				= ImVec4(0.11, 0.11, 0.11, 1.00)
		colors[imgui.Col.FrameBgHovered] 			= ImVec4(0.51, 0.36, 0.15, 1.00)
		colors[imgui.Col.FrameBgActive] 			= ImVec4(0.78, 0.55, 0.21, 1.00)
		colors[imgui.Col.TitleBg] 				= ImVec4(0.51, 0.36, 0.15, 1.00)
		colors[imgui.Col.TitleBgCollapsed] 		= ImVec4(0.00, 0.00, 0.00, 0.51)
		colors[imgui.Col.TitleBgActive] 			= ImVec4(0.91, 0.64, 0.13, 1.00)
		colors[imgui.Col.MenuBarBg] 				= ImVec4(0.11, 0.11, 0.11, 1.00)
		colors[imgui.Col.ScrollbarBg] 			= ImVec4(0.06, 0.06, 0.06, 0.53)
		colors[imgui.Col.ScrollbarGrab] 			= ImVec4(0.21, 0.21, 0.21, 1.00)
		colors[imgui.Col.ScrollbarGrabHovered] 	= ImVec4(0.47, 0.47, 0.47, 1.00)
		colors[imgui.Col.ScrollbarGrabActive] 	= ImVec4(0.81, 0.83, 0.81, 1.00)
		colors[imgui.Col.CheckMark] 				= ImVec4(0.78, 0.55, 0.21, 1.00)
		colors[imgui.Col.SliderGrab] 				= ImVec4(0.91, 0.64, 0.13, 1.00)
		colors[imgui.Col.SliderGrabActive] 		= ImVec4(0.91, 0.64, 0.13, 1.00)
		colors[imgui.Col.Button] 					= ImVec4(0.51, 0.36, 0.15, 1.00)
		colors[imgui.Col.ButtonHovered] 			= ImVec4(0.91, 0.64, 0.13, 1.00)
		colors[imgui.Col.ButtonActive] 			= ImVec4(0.78, 0.55, 0.21, 1.00)
		colors[imgui.Col.Header] 					= ImVec4(0.51, 0.36, 0.15, 1.00)
		colors[imgui.Col.HeaderHovered] 			= ImVec4(0.91, 0.64, 0.13, 1.00)
		colors[imgui.Col.HeaderActive] 			= ImVec4(0.93, 0.65, 0.14, 1.00)
		colors[imgui.Col.ResizeGrip] 				= ImVec4(0.21, 0.21, 0.21, 1.00)
		colors[imgui.Col.ResizeGripHovered] 		= ImVec4(0.91, 0.64, 0.13, 1.00)
		colors[imgui.Col.ResizeGripActive] 		= ImVec4(0.78, 0.55, 0.21, 1.00)
		colors[imgui.Col.PlotLines] 				= ImVec4(0.61, 0.61, 0.61, 1.00)
		colors[imgui.Col.PlotLinesHovered]		= ImVec4(1.00, 0.43, 0.35, 1.00)
		colors[imgui.Col.PlotHistogram] 			= ImVec4(0.90, 0.70, 0.00, 1.00)
		colors[imgui.Col.PlotHistogramHovered] 	= ImVec4(1.00, 0.60, 0.00, 1.00)
		colors[imgui.Col.TextSelectedBg] 			= ImVec4(0.26, 0.59, 0.98, 0.35)
		colors[imgui.Col.ModalWindowDimBg] 		= ImVec4(0.80, 0.80, 0.80, 0.35)
    elseif style == 1 then
        colors[imgui.Col.Text]				   	= ImVec4(0.95, 0.96, 0.98, 1.00)
		colors[imgui.Col.TextDisabled] 			= ImVec4(0.65, 0.65, 0.65, 0.65)
		colors[imgui.Col.WindowBg]			   	= ImVec4(0.14, 0.14, 0.14, 1.00)
		colors[imgui.Col.ChildBg]		  			= ImVec4(0.14, 0.14, 0.14, 1.00)
		colors[imgui.Col.PopupBg]					= ImVec4(0.14, 0.14, 0.14, 1.00)
		colors[imgui.Col.Border]				 	= ImVec4(1.00, 0.28, 0.28, 0.50)
		colors[imgui.Col.Separator]			 	= ImVec4(1.00, 0.28, 0.28, 0.50)
		colors[imgui.Col.BorderShadow]		   	= ImVec4(1.00, 1.00, 1.00, 0.00)
		colors[imgui.Col.FrameBg]					= ImVec4(0.22, 0.22, 0.22, 1.00)
		colors[imgui.Col.FrameBgHovered]		 	= ImVec4(0.18, 0.18, 0.18, 1.00)
		colors[imgui.Col.FrameBgActive]		  	= ImVec4(0.09, 0.12, 0.14, 1.00)
		colors[imgui.Col.TitleBg]					= ImVec4(1.00, 0.30, 0.30, 1.00)
		colors[imgui.Col.TitleBgActive]		  	= ImVec4(1.00, 0.30, 0.30, 1.00)
		colors[imgui.Col.TitleBgCollapsed]	   	= ImVec4(1.00, 0.30, 0.30, 1.00)
		colors[imgui.Col.MenuBarBg]			  	= ImVec4(0.20, 0.20, 0.20, 1.00)
		colors[imgui.Col.ScrollbarBg]				= ImVec4(0.02, 0.02, 0.02, 0.39)
		colors[imgui.Col.ScrollbarGrab]		  	= ImVec4(0.36, 0.36, 0.36, 1.00)
		colors[imgui.Col.ScrollbarGrabHovered]   	= ImVec4(0.18, 0.22, 0.25, 1.00)
		colors[imgui.Col.ScrollbarGrabActive]		= ImVec4(0.24, 0.24, 0.24, 1.00)
		colors[imgui.Col.CheckMark]			  	= ImVec4(1.00, 0.28, 0.28, 1.00)
		colors[imgui.Col.SliderGrab]			 	= ImVec4(1.00, 0.28, 0.28, 1.00)
		colors[imgui.Col.SliderGrabActive]	   	= ImVec4(1.00, 0.28, 0.28, 1.00)
		colors[imgui.Col.Button]				 	= ImVec4(1.00, 0.30, 0.30, 1.00)
		colors[imgui.Col.ButtonHovered]		  	= ImVec4(1.00, 0.25, 0.25, 1.00)
		colors[imgui.Col.ButtonActive]		   	= ImVec4(1.00, 0.20, 0.20, 1.00)
		colors[imgui.Col.Header]				 	= ImVec4(1.00, 0.28, 0.28, 1.00)
		colors[imgui.Col.HeaderHovered]		  	= ImVec4(1.00, 0.39, 0.39, 1.00)
		colors[imgui.Col.HeaderActive]		   	= ImVec4(1.00, 0.21, 0.21, 1.00)
		colors[imgui.Col.ResizeGrip]			 	= ImVec4(1.00, 0.28, 0.28, 1.00)
		colors[imgui.Col.ResizeGripHovered]	  	= ImVec4(1.00, 0.39, 0.39, 1.00)
		colors[imgui.Col.ResizeGripActive]	   	= ImVec4(1.00, 0.19, 0.19, 1.00)
		colors[imgui.Col.PlotLines]			  	= ImVec4(0.61, 0.61, 0.61, 1.00)
		colors[imgui.Col.PlotLinesHovered]	   	= ImVec4(1.00, 0.43, 0.35, 1.00)
		colors[imgui.Col.PlotHistogram]		  	= ImVec4(1.00, 0.21, 0.21, 1.00)
		colors[imgui.Col.PlotHistogramHovered]   	= ImVec4(1.00, 0.18, 0.18, 1.00)
		colors[imgui.Col.TextSelectedBg]		 	= ImVec4(1.00, 0.25, 0.25, 1.00)
		colors[imgui.Col.ModalWindowDimBg]   		= ImVec4(0.00, 0.00, 0.00, 0.30)
    elseif style == 2 then
		colors[imgui.Col.Text]					= ImVec4(1.00, 1.00, 1.00, 1.00)
		colors[imgui.Col.WindowBg]				= ImVec4(0.06, 0.06, 0.06, 0.94)
		colors[imgui.Col.ChildBg]		 			= ImVec4(0.30, 0.20, 0.39, 0.00)
		colors[imgui.Col.PopupBg]					= ImVec4(0.08, 0.08, 0.08, 0.94)
		colors[imgui.Col.Border]					= ImVec4(0.43, 0.43, 0.50, 0.50)
		colors[imgui.Col.Separator]				= ImVec4(0.43, 0.43, 0.50, 0.50)
		colors[imgui.Col.BorderShadow]			= ImVec4(0.00, 0.00, 0.00, 0.00)
		colors[imgui.Col.FrameBg]					= ImVec4(0.16, 0.29, 0.48, 0.54)
		colors[imgui.Col.FrameBgHovered]			= ImVec4(0.26, 0.59, 0.98, 0.40)
		colors[imgui.Col.FrameBgActive]		 	= ImVec4(0.26, 0.59, 0.98, 0.67)
		colors[imgui.Col.TitleBg]			   		= ImVec4(0.04, 0.04, 0.04, 1.00)
		colors[imgui.Col.TitleBgCollapsed]	  	= ImVec4(0.00, 0.00, 0.00, 0.51)
		colors[imgui.Col.TitleBgActive]		 	= ImVec4(0.16, 0.29, 0.48, 1.00)
		colors[imgui.Col.MenuBarBg]			 	= ImVec4(0.14, 0.14, 0.14, 1.00)
		colors[imgui.Col.ScrollbarBg]		   		= ImVec4(0.02, 0.02, 0.02, 0.53)
		colors[imgui.Col.ScrollbarGrab]		 	= ImVec4(0.31, 0.31, 0.31, 1.00)
		colors[imgui.Col.ScrollbarGrabHovered]  	= ImVec4(0.41, 0.41, 0.41, 1.00)
		colors[imgui.Col.ScrollbarGrabActive]   	= ImVec4(0.51, 0.51, 0.51, 1.00)
		colors[imgui.Col.CheckMark]			 	= ImVec4(0.26, 0.59, 0.98, 1.00)
		colors[imgui.Col.SliderGrab]				= ImVec4(0.24, 0.52, 0.88, 1.00)
		colors[imgui.Col.SliderGrabActive]	  	= ImVec4(0.26, 0.59, 0.98, 1.00)
		colors[imgui.Col.Button]					= ImVec4(0.26, 0.59, 0.98, 0.40)
		colors[imgui.Col.ButtonHovered]		 	= ImVec4(0.26, 0.59, 0.98, 1.00)
		colors[imgui.Col.ButtonActive]		  	= ImVec4(0.06, 0.53, 0.98, 1.00)
		colors[imgui.Col.Header]					= ImVec4(0.26, 0.59, 0.98, 0.31)
		colors[imgui.Col.HeaderHovered]		 	= ImVec4(0.26, 0.59, 0.98, 0.80)
		colors[imgui.Col.HeaderActive]		  	= ImVec4(0.26, 0.59, 0.98, 1.00)
		colors[imgui.Col.ResizeGrip]				= ImVec4(0.26, 0.59, 0.98, 0.25)
		colors[imgui.Col.ResizeGripHovered]	 	= ImVec4(0.26, 0.59, 0.98, 0.67)
		colors[imgui.Col.ResizeGripActive]	  	= ImVec4(0.26, 0.59, 0.98, 0.95)
		colors[imgui.Col.PlotLines]			 	= ImVec4(0.61, 0.61, 0.61, 1.00)
		colors[imgui.Col.PlotLinesHovered]	  	= ImVec4(1.00, 0.43, 0.35, 1.00)
		colors[imgui.Col.PlotHistogram]		 	= ImVec4(0.90, 0.70, 0.00, 1.00)
		colors[imgui.Col.PlotHistogramHovered]  	= ImVec4(1.00, 0.60, 0.00, 1.00)
		colors[imgui.Col.TextSelectedBg]			= ImVec4(0.26, 0.59, 0.98, 0.35)
		colors[imgui.Col.ModalWindowDimBg]  		= ImVec4(0.80, 0.80, 0.80, 0.35)
    elseif style == 3 then
        colors[imgui.Col.Text]					= ImVec4(1.00, 1.00, 1.00, 1.00)
		colors[imgui.Col.WindowBg]				= ImVec4(0.14, 0.12, 0.16, 1.00)
		colors[imgui.Col.ChildBg]		 			= ImVec4(0.30, 0.20, 0.39, 0.00)
		colors[imgui.Col.PopupBg]					= ImVec4(0.05, 0.05, 0.10, 0.90)
		colors[imgui.Col.Border]					= ImVec4(0.89, 0.85, 0.92, 0.30)
		colors[imgui.Col.Separator]				= ImVec4(0.89, 0.85, 0.92, 0.30)
		colors[imgui.Col.BorderShadow]			= ImVec4(0.00, 0.00, 0.00, 0.00)
		colors[imgui.Col.FrameBg]					= ImVec4(0.30, 0.20, 0.39, 1.00)
		colors[imgui.Col.FrameBgHovered]			= ImVec4(0.41, 0.19, 0.63, 0.68)
		colors[imgui.Col.FrameBgActive]		 	= ImVec4(0.41, 0.19, 0.63, 1.00)
		colors[imgui.Col.TitleBg]			   		= ImVec4(0.41, 0.19, 0.63, 0.45)
		colors[imgui.Col.TitleBgCollapsed]	  	= ImVec4(0.41, 0.19, 0.63, 0.35)
		colors[imgui.Col.TitleBgActive]		 	= ImVec4(0.41, 0.19, 0.63, 0.78)
		colors[imgui.Col.MenuBarBg]			 	= ImVec4(0.30, 0.20, 0.39, 0.57)
		colors[imgui.Col.ScrollbarBg]		   		= ImVec4(0.30, 0.20, 0.39, 1.00)
		colors[imgui.Col.ScrollbarGrab]		 	= ImVec4(0.41, 0.19, 0.63, 0.31)
		colors[imgui.Col.ScrollbarGrabHovered]  	= ImVec4(0.41, 0.19, 0.63, 0.78)
		colors[imgui.Col.ScrollbarGrabActive]   	= ImVec4(0.41, 0.19, 0.63, 1.00)
		colors[imgui.Col.CheckMark]			 	= ImVec4(0.56, 0.61, 1.00, 1.00)
		colors[imgui.Col.SliderGrab]				= ImVec4(0.41, 0.19, 0.63, 0.24)
		colors[imgui.Col.SliderGrabActive]	  	= ImVec4(0.41, 0.19, 0.63, 1.00)
		colors[imgui.Col.Button]					= ImVec4(0.41, 0.19, 0.63, 0.44)
		colors[imgui.Col.ButtonHovered]		 	= ImVec4(0.41, 0.19, 0.63, 0.86)
		colors[imgui.Col.ButtonActive]		  	= ImVec4(0.64, 0.33, 0.94, 1.00)
		colors[imgui.Col.Header]					= ImVec4(0.41, 0.19, 0.63, 0.76)
		colors[imgui.Col.HeaderHovered]		 	= ImVec4(0.41, 0.19, 0.63, 0.86)
		colors[imgui.Col.HeaderActive]		  	= ImVec4(0.41, 0.19, 0.63, 1.00)
		colors[imgui.Col.ResizeGrip]				= ImVec4(0.41, 0.19, 0.63, 0.20)
		colors[imgui.Col.ResizeGripHovered]	 	= ImVec4(0.41, 0.19, 0.63, 0.78)
		colors[imgui.Col.ResizeGripActive]	  	= ImVec4(0.41, 0.19, 0.63, 1.00)
		colors[imgui.Col.PlotLines]			 	= ImVec4(0.89, 0.85, 0.92, 0.63)
		colors[imgui.Col.PlotLinesHovered]	  	= ImVec4(0.41, 0.19, 0.63, 1.00)
		colors[imgui.Col.PlotHistogram]		 	= ImVec4(0.89, 0.85, 0.92, 0.63)
		colors[imgui.Col.PlotHistogramHovered]  	= ImVec4(0.41, 0.19, 0.63, 1.00)
		colors[imgui.Col.TextSelectedBg]			= ImVec4(0.41, 0.19, 0.63, 0.43)
		colors[imgui.Col.ModalWindowDimBg]  		= ImVec4(0.20, 0.20, 0.20, 0.35)
    elseif style == 4 then
        colors[imgui.Col.Text]				   	= ImVec4(0.90, 0.90, 0.90, 1.00)
		colors[imgui.Col.TextDisabled]		   	= ImVec4(0.60, 0.60, 0.60, 1.00)
		colors[imgui.Col.WindowBg]			   	= ImVec4(0.08, 0.08, 0.08, 1.00)
		colors[imgui.Col.ChildBg]		  			= ImVec4(0.10, 0.10, 0.10, 1.00)
		colors[imgui.Col.PopupBg]					= ImVec4(0.08, 0.08, 0.08, 1.00)
		colors[imgui.Col.Border]				 	= ImVec4(0.70, 0.70, 0.70, 0.40)
		colors[imgui.Col.Separator]			 	= ImVec4(0.70, 0.70, 0.70, 0.40)
		colors[imgui.Col.BorderShadow]		   	= ImVec4(0.00, 0.00, 0.00, 0.00)
		colors[imgui.Col.FrameBg]					= ImVec4(0.15, 0.15, 0.15, 1.00)
		colors[imgui.Col.FrameBgHovered]		 	= ImVec4(0.19, 0.19, 0.19, 0.71)
		colors[imgui.Col.FrameBgActive]		  	= ImVec4(0.34, 0.34, 0.34, 0.79)
		colors[imgui.Col.TitleBg]					= ImVec4(0.00, 0.69, 0.33, 0.80)
		colors[imgui.Col.TitleBgActive]		  	= ImVec4(0.00, 0.74, 0.36, 1.00)
		colors[imgui.Col.TitleBgCollapsed]	   	= ImVec4(0.00, 0.69, 0.33, 0.50)
		colors[imgui.Col.MenuBarBg]			  	= ImVec4(0.00, 0.80, 0.38, 1.00)
		colors[imgui.Col.ScrollbarBg]				= ImVec4(0.16, 0.16, 0.16, 1.00)
		colors[imgui.Col.ScrollbarGrab]		  	= ImVec4(0.00, 0.69, 0.33, 1.00)
		colors[imgui.Col.ScrollbarGrabHovered]   	= ImVec4(0.00, 0.82, 0.39, 1.00)
		colors[imgui.Col.ScrollbarGrabActive]		= ImVec4(0.00, 1.00, 0.48, 1.00)
		colors[imgui.Col.CheckMark]			  	= ImVec4(0.00, 0.69, 0.33, 1.00)
		colors[imgui.Col.SliderGrab]			 	= ImVec4(0.00, 0.69, 0.33, 1.00)
		colors[imgui.Col.SliderGrabActive]	   	= ImVec4(0.00, 0.77, 0.37, 1.00)
		colors[imgui.Col.Button]				 	= ImVec4(0.00, 0.69, 0.33, 1.00)
		colors[imgui.Col.ButtonHovered]		  	= ImVec4(0.00, 0.82, 0.39, 1.00)
		colors[imgui.Col.ButtonActive]		   	= ImVec4(0.00, 0.87, 0.42, 1.00)
		colors[imgui.Col.Header]				 	= ImVec4(0.00, 0.69, 0.33, 1.00)
		colors[imgui.Col.HeaderHovered]		  	= ImVec4(0.00, 0.76, 0.37, 0.57)
		colors[imgui.Col.HeaderActive]		   	= ImVec4(0.00, 0.88, 0.42, 0.89)
		colors[imgui.Col.SeparatorHovered]	   	= ImVec4(1.00, 1.00, 1.00, 0.60)
		colors[imgui.Col.SeparatorActive]			= ImVec4(1.00, 1.00, 1.00, 0.80)
		colors[imgui.Col.ResizeGrip]			 	= ImVec4(0.00, 0.69, 0.33, 1.00)
		colors[imgui.Col.ResizeGripHovered]	  	= ImVec4(0.00, 0.76, 0.37, 1.00)
		colors[imgui.Col.ResizeGripActive]	   	= ImVec4(0.00, 0.86, 0.41, 1.00)
		colors[imgui.Col.PlotLines]			  	= ImVec4(0.00, 0.69, 0.33, 1.00)
		colors[imgui.Col.PlotLinesHovered]	   	= ImVec4(0.00, 0.74, 0.36, 1.00)
		colors[imgui.Col.PlotHistogram]		  	= ImVec4(0.00, 0.69, 0.33, 1.00)
		colors[imgui.Col.PlotHistogramHovered]   	= ImVec4(0.00, 0.80, 0.38, 1.00)
		colors[imgui.Col.TextSelectedBg]		 	= ImVec4(0.00, 0.69, 0.33, 0.72)
		colors[imgui.Col.ModalWindowDimBg]   		= ImVec4(0.17, 0.17, 0.17, 0.48)
    elseif style == 5 then
        colors[imgui.Col.Text]                   = imgui.ImVec4(1.00, 1.00, 1.00, 1.00)
        colors[imgui.Col.TextDisabled]           = imgui.ImVec4(0.50, 0.50, 0.50, 1.00)
        colors[imgui.Col.WindowBg]               = imgui.ImVec4(0.07, 0.07, 0.07, 1.00)
        colors[imgui.Col.ChildBg]                = imgui.ImVec4(0.14, 0.14, 0.14, 0.75)
        colors[imgui.Col.PopupBg]                = imgui.ImVec4(0.07, 0.07, 0.07, 1.00)
        colors[imgui.Col.Border]                 = imgui.ImVec4(0.25, 0.25, 0.26, 0.54)
        colors[imgui.Col.BorderShadow]           = imgui.ImVec4(0.00, 0.00, 0.00, 0.00)
        colors[imgui.Col.FrameBg]                = imgui.ImVec4(0.21, 0.21, 0.21, 1.00)
        colors[imgui.Col.FrameBgHovered]         = imgui.ImVec4(0.25, 0.25, 0.26, 1.00)
        colors[imgui.Col.FrameBgActive]          = imgui.ImVec4(0.25, 0.25, 0.26, 1.00)
        colors[imgui.Col.TitleBg]                = imgui.ImVec4(0.12, 0.12, 0.12, 1.00)
        colors[imgui.Col.TitleBgActive]          = imgui.ImVec4(0.12, 0.12, 0.12, 1.00)
        colors[imgui.Col.TitleBgCollapsed]       = imgui.ImVec4(0.12, 0.12, 0.12, 1.00)
        colors[imgui.Col.MenuBarBg]              = imgui.ImVec4(0.12, 0.12, 0.12, 1.00)
        colors[imgui.Col.ScrollbarBg]            = imgui.ImVec4(0.12, 0.12, 0.12, 1.00)
        colors[imgui.Col.ScrollbarGrab]          = imgui.ImVec4(0.00, 0.00, 0.00, 1.00)
        colors[imgui.Col.ScrollbarGrabHovered]   = imgui.ImVec4(0.41, 0.41, 0.41, 1.00)
        colors[imgui.Col.ScrollbarGrabActive]    = imgui.ImVec4(0.51, 0.51, 0.51, 1.00)
        colors[imgui.Col.CheckMark]              = imgui.ImVec4(0.45, 0.45, 0.45, 1.00)
        colors[imgui.Col.SliderGrab]             = imgui.ImVec4(0.12, 0.12, 0.12, 1.00)
        colors[imgui.Col.SliderGrabActive]       = imgui.ImVec4(0.12, 0.12, 0.12, 1.00)
        colors[imgui.Col.Button]                 = imgui.ImVec4(0.28, 0.28, 0.28, 1.00)
        colors[imgui.Col.ButtonHovered]          = imgui.ImVec4(0.31, 0.31, 0.31, 1.00)
        colors[imgui.Col.ButtonActive]           = imgui.ImVec4(0.41, 0.41, 0.41, 1.00)
        colors[imgui.Col.Header]                 = imgui.ImVec4(0.12, 0.12, 0.12, 1.00)
        colors[imgui.Col.HeaderHovered]          = imgui.ImVec4(0.20, 0.20, 0.20, 1.00)
        colors[imgui.Col.HeaderActive]           = imgui.ImVec4(0.47, 0.47, 0.47, 1.00)
        colors[imgui.Col.Separator]              = imgui.ImVec4(0.28, 0.28, 0.28, 1.00)
        colors[imgui.Col.SeparatorHovered]       = imgui.ImVec4(0.12, 0.12, 0.12, 1.00)
        colors[imgui.Col.SeparatorActive]        = imgui.ImVec4(0.12, 0.12, 0.12, 1.00)
        colors[imgui.Col.ResizeGrip]             = imgui.ImVec4(1.00, 1.00, 1.00, 0.25)
        colors[imgui.Col.ResizeGripHovered]      = imgui.ImVec4(1.00, 1.00, 1.00, 0.67)
        colors[imgui.Col.ResizeGripActive]       = imgui.ImVec4(1.00, 1.00, 1.00, 0.95)
        colors[imgui.Col.Tab]                    = imgui.ImVec4(0.12, 0.12, 0.12, 1.00)
        colors[imgui.Col.TabHovered]             = imgui.ImVec4(0.28, 0.28, 0.28, 1.00)
        colors[imgui.Col.TabActive]              = imgui.ImVec4(0.30, 0.30, 0.30, 1.00)
        colors[imgui.Col.TabUnfocused]           = imgui.ImVec4(0.07, 0.10, 0.15, 0.97)
        colors[imgui.Col.TabUnfocusedActive]     = imgui.ImVec4(0.14, 0.26, 0.42, 1.00)
        colors[imgui.Col.PlotLines]              = imgui.ImVec4(0.61, 0.61, 0.61, 1.00)
        colors[imgui.Col.PlotLinesHovered]       = imgui.ImVec4(1.00, 0.43, 0.35, 1.00)
        colors[imgui.Col.PlotHistogram]          = imgui.ImVec4(0.90, 0.70, 0.00, 1.00)
        colors[imgui.Col.PlotHistogramHovered]   = imgui.ImVec4(1.00, 0.60, 0.00, 1.00)
        colors[imgui.Col.TextSelectedBg]         = imgui.ImVec4(1.00, 0.00, 0.00, 0.35)
        colors[imgui.Col.DragDropTarget]         = imgui.ImVec4(1.00, 1.00, 0.00, 0.90)
        colors[imgui.Col.NavHighlight]           = imgui.ImVec4(0.26, 0.59, 0.98, 1.00)
        colors[imgui.Col.NavWindowingHighlight]  = imgui.ImVec4(1.00, 1.00, 1.00, 0.70)
        colors[imgui.Col.NavWindowingDimBg]      = imgui.ImVec4(0.80, 0.80, 0.80, 0.20)
        colors[imgui.Col.ModalWindowDimBg]       = imgui.ImVec4(0.00, 0.00, 0.00, 0.70)
    end
end

function imgui.CircleButton(str_id, bool, color4, radius, isimage)
	local rBool = false
	local p = imgui.GetCursorScreenPos()
	local isimage = isimage or false
	local radius = radius or 10
	local draw_list = imgui.GetWindowDrawList()
	if imgui.InvisibleButton(str_id, imgui.ImVec2(23, 23)) then
		rBool = true
	end
	
	if imgui.IsItemHovered() then
		imgui.SetMouseCursor(imgui.MouseCursor.Hand)
	end

	draw_list:AddCircleFilled(imgui.ImVec2(p.x + radius, p.y + radius), radius-3, imgui.ColorConvertFloat4ToU32(isimage and imgui.ImVec4(0,0,0,0) or color4))

	if bool then
		draw_list:AddCircle(imgui.ImVec2(p.x + radius, p.y + radius), radius, imgui.ColorConvertFloat4ToU32(color4),_,1.5)
	end

	imgui.SetCursorPosY(imgui.GetCursorPosY()+radius)
	return rBool
end

function imgui.ToggleButton(str_id, bool)
	local rBool = false

	local p = imgui.GetCursorScreenPos()
	local draw_list = imgui.GetWindowDrawList()
	local height = 20
	local width = height * 1.55
	local radius = height * 0.50
	local animTime = 0.13
	
	local color_active = imgui.GetStyle().Colors[imgui.Col.CheckMark]
	local color_inactive = imgui.ImVec4(100 / 255, 100 / 255, 100 / 255, 180 / 255)

	if imgui.InvisibleButton(str_id, imgui.ImVec2(width, height)) then
		bool[0] = not bool[0]
		rBool = true
		LastActiveTime[tostring(str_id)] = os.clock()
		LastActive[tostring(str_id)] = true
	end

	local hovered = imgui.IsItemHovered()

	imgui.SameLine()
	imgui.SetCursorPosY(imgui.GetCursorPosY()+3)
	imgui.Text(str_id)

	local t = bool[0] and 1.0 or 0.0

	if LastActive[tostring(str_id)] then
		local time = os.clock() - LastActiveTime[tostring(str_id)]
		if time <= animTime then
			local t_anim = ImSaturate(time / animTime)
			t = bool[0] and t_anim or 1.0 - t_anim
		else
			LastActive[tostring(str_id)] = false
		end
	end

	local col_bg = bringVec4To(not bool[0] and color_active or color_inactive, bool[0] and color_active or color_inactive, LastActiveTime[tostring(str_id)] or 0, animTime)

	draw_list:AddRectFilled(imgui.ImVec2(p.x, p.y + (height / 6)), imgui.ImVec2(p.x + width - 1.0, p.y + (height - (height / 6))), imgui.ColorConvertFloat4ToU32(col_bg), 10.0)
	draw_list:AddCircleFilled(imgui.ImVec2(p.x + (bool[0] and radius + 1.5 or radius - 3) + t * (width - radius * 2.0), p.y + radius), radius - 6, imgui.ColorConvertFloat4ToU32(imgui.GetStyle().Colors[imgui.Col.Text]))

	return rBool
end

function ImSaturate(f)
	return f < 0.0 and 0.0 or (f > 1.0 and 1.0 or f)
end

function bringVec4To(from, to, start_time, duration)
	local timer = os.clock() - start_time
	if timer >= 0.00 and timer <= duration then
		local count = timer / (duration / 100)
		return imgui.ImVec4(
			from.x + (count * (to.x - from.x) / 100),
			from.y + (count * (to.y - from.y) / 100),
			from.z + (count * (to.z - from.z) / 100),
			from.w + (count * (to.w - from.w) / 100)
		), true
	end
	return (timer > duration) and to or from, false
end

function onWindowMessage(msg, wparam, lparam) 
	if msg == 261 and wparam == 13 then consumeWindowMessage(true, true) end 
end
